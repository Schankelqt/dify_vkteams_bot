# pyrus_client.py

import os
import requests
import time
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ .env
load_dotenv()

# –ü—Ä–æ–∫—Å–∏ URL
PROXY_UPLOAD_URL = os.getenv("PYRUS_UPLOAD_PROXY_URL")

# –†–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏
TASK_ID_DAILY = os.getenv("PYRUS_TARGET_TASK_ID_DAILY")
TASK_ID_WEEKLY = os.getenv("PYRUS_TARGET_TASK_ID_WEEKLY")

if not PROXY_UPLOAD_URL or not TASK_ID_DAILY or not TASK_ID_WEEKLY:
    raise RuntimeError(
        "–ù—É–∂–Ω–æ –∑–∞–¥–∞—Ç—å PYRUS_UPLOAD_PROXY_URL, PYRUS_TARGET_TASK_ID_DAILY –∏ PYRUS_TARGET_TASK_ID_WEEKLY –≤ .env"
    )


def upload_json_to_task(json_data: dict, file_name: str, team_id: int):
    """
    –ó–∞–≥—Ä—É–∂–∞–µ—Ç JSON-–æ—Ç—á—ë—Ç –≤ Pyrus —á–µ—Ä–µ–∑ –ø—Ä–æ–∫—Å–∏ —ç–Ω–¥–ø–æ–∏–Ω—Ç.
    –î–ª—è –∫–æ–º–∞–Ω–¥ 1‚Äì2 (daily) ‚Üí Daily –∑–∞–¥–∞—á–∞.
    –î–ª—è –∫–æ–º–∞–Ω–¥—ã 3 (weekly) ‚Üí Weekly –∑–∞–¥–∞—á–∞.
    –ü—Ä–∏ –Ω–µ—É–¥–∞—á–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, timeout) –ø—ã—Ç–∞–µ—Ç—Å—è —Å–Ω–æ–≤–∞ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç –¥–æ —É—Å–ø–µ—Ö–∞.
    """

    if team_id == 3:
        task_id = int(TASK_ID_WEEKLY)
    else:
        task_id = int(TASK_ID_DAILY)

    payload = {
        "filename": file_name,
        "task_id": task_id,
        "body": json_data
    }

    attempt = 1
    while True:
        print(f"üì§ [{attempt}] –û—Ç–ø—Ä–∞–≤–∫–∞ {file_name} –≤ Pyrus (–∑–∞–¥–∞—á–∞ {task_id})‚Ä¶")
        try:
            resp = requests.post(PROXY_UPLOAD_URL, json=payload, timeout=90)
            print(f"üîÅ [{attempt}] –°—Ç–∞—Ç—É—Å: {resp.status_code}")
            if resp.ok:
                print("‚úÖ –£—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–æ!")
                break
            else:
                print(f"‚ö†Ô∏è [{attempt}] –û—à–∏–±–∫–∞: {resp.text[:1000]}")
        except requests.RequestException as e:
            print(f"‚ùå [{attempt}] –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")

        attempt += 1
        print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ 5 –º–∏–Ω—É—Ç –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–æ–º...")
        time.sleep(5 * 60)  # 5 –º–∏–Ω—É—Ç